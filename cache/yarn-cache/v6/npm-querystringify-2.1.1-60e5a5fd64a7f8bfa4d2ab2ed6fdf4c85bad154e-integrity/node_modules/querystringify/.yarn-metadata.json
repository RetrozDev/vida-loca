{
  "manifest": {
    "name": "querystringify",
    "version": "2.1.1",
    "description": "Querystringify - Small, simple but powerful query string parser.",
    "main": "index.js",
    "scripts": {
      "test": "mocha test.js",
      "watch": "mocha --watch test.js",
      "coverage": "istanbul cover _mocha -- test.js",
      "test-travis": "istanbul cover _mocha --report lcovonly -- test.js"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/unshiftio/querystringify"
    },
    "keywords": [
      "query",
      "string",
      "query-string",
      "querystring",
      "qs",
      "stringify",
      "parse",
      "decode",
      "encode"
    ],
    "author": {
      "name": "Arnout Kazemier"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/unshiftio/querystringify/issues"
    },
    "homepage": "https://github.com/unshiftio/querystringify",
    "devDependencies": {
      "assume": "^2.1.0",
      "istanbul": "^0.4.5",
      "mocha": "^5.2.0",
      "pre-commit": "^1.2.2"
    },
    "_registry": "npm",
    "_loc": "C:\\Users\\Ryan\\Documents\\Dev\\vida-loca\\cache\\yarn-cache\\v6\\npm-querystringify-2.1.1-60e5a5fd64a7f8bfa4d2ab2ed6fdf4c85bad154e-integrity\\node_modules\\querystringify\\package.json",
    "readmeFilename": "README.md",
    "readme": "# querystringify\n\n[![Made by unshift](https://img.shields.io/badge/made%20by-unshift-00ffcc.svg?style=flat-square)](http://unshift.io)[![Version npm](http://img.shields.io/npm/v/querystringify.svg?style=flat-square)](http://browsenpm.org/package/querystringify)[![Build Status](http://img.shields.io/travis/unshiftio/querystringify/master.svg?style=flat-square)](https://travis-ci.org/unshiftio/querystringify)[![Dependencies](https://img.shields.io/david/unshiftio/querystringify.svg?style=flat-square)](https://david-dm.org/unshiftio/querystringify)[![Coverage Status](http://img.shields.io/coveralls/unshiftio/querystringify/master.svg?style=flat-square)](https://coveralls.io/r/unshiftio/querystringify?branch=master)[![IRC channel](http://img.shields.io/badge/IRC-irc.freenode.net%23unshift-00a8ff.svg?style=flat-square)](http://webchat.freenode.net/?channels=unshift)\n\nA somewhat JSON compatible interface for query string parsing. This query string\nparser is dumb, don't expect to much from it as it only wants to parse simple\nquery strings. If you want to parse complex, multi level and deeply nested\nquery strings then you should ask your self. WTF am I doing?\n\n## Installation\n\nThis module is released in npm as `querystringify`. It's also compatible with\n`browserify` so it can be used on the server as well as on the client. To\ninstall it simply run the following command from your CLI:\n\n```\nnpm install --save querystringify\n```\n\n## Usage\n\nIn the following examples we assume that you've already required the library as:\n\n```js\n'use strict';\n\nvar qs = require('querystringify');\n```\n\n### qs.parse()\n\nThe parse method transforms a given query string in to an object. Parameters\nwithout values are set to empty strings. It does not care if your query string\nis prefixed with a `?` or not. It just extracts the parts between the `=` and\n`&`:\n\n```js\nqs.parse('?foo=bar');         // { foo: 'bar' }\nqs.parse('foo=bar');          // { foo: 'bar' }\nqs.parse('foo=bar&bar=foo');  // { foo: 'bar', bar: 'foo' }\nqs.parse('foo&bar=foo');      // { foo: '', bar: 'foo' }\n```\n\n### qs.stringify()\n\nThis transforms a given object in to a query string. By default we return the\nquery string without a `?` prefix. If you want to prefix it by default simply\nsupply `true` as second argument. If it should be prefixed by something else\nsimply supply a string with the prefix value as second argument:\n\n```js\nqs.stringify({ foo: bar });       // foo=bar\nqs.stringify({ foo: bar }, true); // ?foo=bar\nqs.stringify({ foo: bar }, '&');  // &foo=bar\nqs.stringify({ foo: '' }, '&');   // &foo=\n```\n\n## License\n\nMIT\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) 2015 Unshift.io, Arnout Kazemier,  the Contributors.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/querystringify/-/querystringify-2.1.1.tgz#60e5a5fd64a7f8bfa4d2ab2ed6fdf4c85bad154e",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/querystringify/-/querystringify-2.1.1.tgz",
    "hash": "60e5a5fd64a7f8bfa4d2ab2ed6fdf4c85bad154e",
    "integrity": "sha512-w7fLxIRCRT7U8Qu53jQnJyPkYZIaR4n5151KMfcJlO/A9397Wxb1amJvROTK6TOnp7PfoAmg/qXiNHI+08jRfA==",
    "registry": "npm",
    "packageName": "querystringify",
    "cacheIntegrity": "sha512-w7fLxIRCRT7U8Qu53jQnJyPkYZIaR4n5151KMfcJlO/A9397Wxb1amJvROTK6TOnp7PfoAmg/qXiNHI+08jRfA== sha1-YOWl/WSn+L+k0qsu1v30yFutFU4="
  },
  "registry": "npm",
  "hash": "60e5a5fd64a7f8bfa4d2ab2ed6fdf4c85bad154e"
}